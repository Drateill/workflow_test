name: Terraform Apply
on:
  workflow_dispatch:
    inputs:
      arm_client_id:
        description: ARM Client ID
        required: true
      arm_client_secret:
        description: ARM Client Secret
        required: true
      arm_subscription_id:
        description: ARM Subscription ID
        required: true
      arm_tenant_id:
        description: ARM Tenant ID
        required: true
      resource_group_name:
        description: Resource Group Name
        required: true
      storage_account_name:
        description: Storage Account Name
        required: true
      container_name:
        description: Container Name
        required: true
      key:
        description: Backend Config Key
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        tf_version: "1.0.0"

    - name: Terraform Init
      id: init
      run: |
        echo "resource_group_name=${{ inputs.resource_group_name }}" > backend.config
        echo "storage_account_name=${{ inputs.storage_account_name }}" >> backend.config
        echo "container_name=${{ inputs.container_name }}" >> backend.config
        echo "key=${{ inputs.key }}" >> backend.config

        terraform init -input=false -no-color -backend-config="backend.config"
      continue-on-error: true

    - name: Plan
      run: |
        terraform plan -out=tfplan -input=false -no-color
      continue-on-error: true

    - name: Apply
      if: ${{ steps.apply.outcome == 'success' }}
      run: terraform apply tfplan -input=false -no-color
      continue-on-error: true

    - name: Clean up
      run: |
        rm -f backend.config tfplan
      continue-on-error: true
